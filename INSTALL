Installation
------------

To install BEM3D, you should already have installed wmpi, a wrapper
for MPI functions (even if you are only running on a serial system),
SISL (for the iterative solver). You can get these from the same place
you got BEM3D. You should also have installed Stephane Popinet's GTS,
which you can get from gts.sourceforge.net. BEM3D uses Christophe
Geuzaine and Jean-François Remacle's gmsh software for meshing and
visualization. This is not essential to the running of the codes, but
will make life much easier.

Optionally, but recommended, you can include support for Fast
Multipole Method calculations using the fmmlib library, available
from

https://github.com/zgimbutas/fmmlib3d

Download fmmlib3d-1.2 and unzip it in the BEM3D directory to put the
source tree under the directory fmmlib3d-1.2

To install BEM3D, in the root directory of the source code, type:

  ./configure --help

which will give you a list of configuration options. Check which of
these you need to set (probably none) and type:

  ./configure <options>

followed by:

   make
   make install

This will install the executables, libraries and include files
wherever you have chosen (by default, /usr/local/[bin | lib |
include]) and will put HTML documentation in a directory
.../share/doc/bem3d/html

Running BEM3D
-------------

To test that the codes are working, try one of the examples in the
directory of examples in the source code directory. For example, to
run a problem for scattering of a point source field by a sphere, run
the script `sphere' in the directory .../examples/Sphere:

  ./sphere -k 2.3 -r 5 

will run the problem for a sphere refined 5 times (look in the
documentation of GTS's gts_surface_generate_sphere) with a wavenumber
of 2.3. The script will solve for the surface potential and then
compute the radiated field on a planar surface, generating output
files which can be visualized using gmsh. Type

  ./sphere -h

to get a list of options. Especially important is the option `-f'
which switches on the fast(ish) multipole solver and allows you to
solve much larger problems than using a conventional matrix-based
method.


