MESH FORMAT 2

$MeshFormat
version-number file-type data-size
$EndMeshFormat
$PhysicalNames
number-of-names
physical-dimension physical-tag "physical-name"
...
$EndPhysicalNames
$Nodes
number-of-nodes
node-number x-coord y-coord z-coord
...
$EndNodes
$Elements
number-of-elements
elm-number elm-type number-of-tags < tag > ... node-number-list
...
$EndElements
$Periodic
number-of-periodic-entities
dimension slave-entity-tag master-entity-tag
number-of-nodes
slave-node-number master-node-number
...
$EndPeriodic
$NodeData
number-of-string-tags
< "string-tag" >
...
number-of-real-tags
< real-tag >
...
number-of-integer-tags
< integer-tag >
...
node-number value ...
...
$EndNodeData
$ElementData
number-of-string-tags
< "string-tag" >
...
number-of-real-tags
< real-tag >
...
number-of-integer-tags
< integer-tag >
...
elm-number value ...
...
$EndElementData
$ElementNodeData
number-of-string-tags
< "string-tag" >
...
number-of-real-tags
< real-tag >
...
number-of-integer-tags
< integer-tag >
...
elm-number number-of-nodes-per-element value ...
...
$EndElementNodeData
$InterpolationScheme
"name"
number-of-element-topologies
elm-topology
number-of-interpolation-matrices
num-rows num-columns value ...
... 
$EndInterpolationScheme

MESH FORMAT 4

$MeshFormat // same as MSH version 2
  version(ASCII double; currently 4.0) file-type(ASCII int; 1 for binary mode)
    data-size(ASCII int; currently unused)
  <int with value one; only in binary mode, to detect endianness>
$EndMeshFormat

<$PhysicalNames> // same as MSH version 2
  numPhysicalNames(ASCII int)
  dimension(ASCII int) tag(ASCII int) name(127 characters max)
  ...
<$EndPhysicalNames>

$Entities
  numPoints(unsigned long) numCurves(unsigned long)
    numSurfaces(unsigned long) numVolumes(unsigned long)
  // points
  tag(int) boxMinX(double) boxMinY(double) boxMinZ(double)
    boxMaxX(double) boxMaxY(double) boxMaxZ(double)
    numPhysicals(unsigned long) physicalTag(int) ...
  ...
  // curves
  tag(int) boxMinX(double) boxMinY(double) boxMinZ(double)
     boxMaxX(double) boxMaxY(double) boxMaxZ(double)
     numPhysicals(unsigned long) physicalTag(int) ...
     numBoundingPoints(unsigned long) tagPoint(int) ...
  ...
  // surfaces
  tag(int) boxMinX(double) boxMinY(double) boxMinZ(double)
    boxMaxX(double) boxMaxY(double) boxMaxZ(double)
    numPhysicals(unsigned long) physicalTag(int) ...
    numBoundingCurves(unsigned long) tagCurve(int) ...
  ...
  // volumes
  tag(int) boxMinX(double) boxMinY(double) boxMinZ(double)
    boxMaxX(double) boxMaxY(double) boxMaxZ(double)
    numPhysicals(unsigned long) physicalTag(int) ...
    numBoundngSurfaces(unsigned long) tagSurfaces(int) ...
  ...
$EndEntities

<$PartitionedEntities>
  numPartitions(int)
  numGhostEntities(int)
  ghostEntityTag(int) partition(int)
  ...
  numPoints(unsigned long) numCurves(unsigned long)
    numSurfaces(unsigned long) numVolumes(unsigned long)
  // points
  tag(int) parentDim(int) parentTag(int) numPartitions(int) partitionTag(int) ...
    boxMinX(double) boxMinY(double) boxMinZ(double)
    boxMaxX(double) boxMaxY(double) boxMaxZ(double)
    numPhysicals(unsigned long) physicalTag(int) ...
  ...
  // curves
  tag(int) parentDim(int) parentTag(int) numPartitions(int) partitionTag(int) ...
    boxMinX(double) boxMinY(double) boxMinZ(double)
    boxMaxX(double) boxMaxY(double) boxMaxZ(double)
    numPhysicals(unsigned long) physicalTag(int) ...
    numBoundingPoints(unsigned long) tagPoint(int) ...
  ...
  // surfaces
  tag(int) parentDim(int) parentTag(int) numPartitions(int) partitionTag(int) ...
    boxMinX(double) boxMinY(double) boxMinZ(double)
    boxMaxX(double) boxMaxY(double) boxMaxZ(double)
    numPhysicals(unsigned long) physicalTag(int) ...
    numBoundingCurves(unsigned long) tagCurve(int) ...
  ...
  // volumes
  tag(int) parentDim(int) parentTag(int) numPartitions(int) partitionTag(int) ...
    boxMinX(double) boxMinY(double) boxMinZ(double)
    boxMaxX(double) boxMaxY(double) boxMaxZ(double)
    numPhysicals(unsigned long) physicalTag(int) ...
    numBoundingSurfaces(unsigned long) tagSurfaces(int) ...
  ...
<$EndPartitionedEntities>

$Nodes
  numEntityBlocks(unsigned long) numNodes(unsigned long)
  tagEntity(int) dimEntity(int) parametric(int; see below) numNodes(unsigned long)
    tag(int) x(double) y(double) z(double)
       <u(double; if parametric and on curve or surface)>
       <v(double; if parametric and on surface)>
    ...
  ...
$EndNodes

$Elements
  numEntityBlocks(unsigned long) numElements(unsigned long)
  tagEntity(int) dimEntity(int) typeEle(int; see below) numElements(unsigned long)
    tag(int) numVert(int) ...
    ...
  ...
$EndElements

<$Periodic> // same as in MSH version 2
  numPeriodicLinks(int)
  slaveDim(int) slaveTag(int) masterTag(int)
    < Affine value(double) ... >
    correspondingVertexSize(unsigned long)
      numVert(int) numVert(int)
      ...
  ...
<$EndPeriodic>

<$GhostElements>
  numGhostElement(int)
  elementTag(int) partition(int) numGhostPartitions(int) ghostPartition(int) ...
<$EndGhostElements>

<$NodeData>
  numStringTags(ASCII int)
  stringTag(string) ...
  numRealTags(ASCII int)
  realTag(ASCII double) ...
  numIntegerTags(ASCII int)
  integerTag(ASCII int) ...
  nodeNumber(int) value(double) ...
<$EndNodeData>

<$ElementData>
  numStringTags(ASCII int)
  stringTag(string) ...
  numRealTags(ASCII int)
  realTag(ASCII double) ...
  numIntegerTags(ASCII int)
  integerTag(ASCII int) ...
  elementNumber(int) value(double) ...
<$EndElementData>

<$ElementNodeData>
  numStringTags(ASCII int)
  stringTag(string) ...
  numRealTags(ASCII int)
  realTag(ASCII double) ...
  numIntegerTags(ASCII int)
  integerTag(ASCII int) ...
  elementNumber(int) numNodesPerElement(int) value(double) ...
<$EndElementNodeData>

<$InterpolationScheme>
  name(string)
  numElementTopologies(ASCII int)
  elementTopology
  numInterpolationMatrices(ASCII int)
  numRows(ASCII int) numColumns(ASCII int) value(ASCII double) ...
<$EndInterpolationScheme>
